#!/bin/bash

# Function to cut and append section content to a file
cut_and_append() {
      local section_name="$1"
        local input_file="$2"
          local output_file="$3"

            # Use sed to extract the section content and append it to the output file
              sed -n "/'${section_name}::/,/'${section_name}::end'/p" "$input_file" >> "$output_file"
          }

      # Test files
      test_files=("types.test.js" "existence.test.js" "url.test.js" "element.test.js" "versioning.test.js" "concatenation.test.js" "regularExpressionSort.test.js" "find.test.js" "path.test.js" "stringEdit.test.js" "namespacing.test.js" "generator.test.js" "selfClosingTags.test.js" "uniq.test.js" "naming.test.js" "extract.test.js" "superset.test.js" "findEntryPoint.test.js" "comments.test.js")

      # Input source file
      source_file="your_source_file.js"

      # Loop through the test files and cut the corresponding sections
      for test_file in "${test_files[@]}"; do
            echo "Cutting sections for ${test_file}..."
              cut_and_append "ReactifyHTML::${test_file%.*}" "$source_file" "$test_file"
                echo "Done cutting sections for ${test_file}."
            done

            # Create the test setup file
            echo "Creating testSetup.js..."
            echo "import chai from 'chai';" > "testSetup.js"
            echo "import cv from '../index.js';" >> "testSetup.js"
            echo "" >> "testSetup.js"
            echo "const expect = chai.expect;" >> "testSetup.js"
            echo "" >> "testSetup.js"
            echo "export { expect, cv };" >> "testSetup.js"
            echo "Done creating testSetup.js."
