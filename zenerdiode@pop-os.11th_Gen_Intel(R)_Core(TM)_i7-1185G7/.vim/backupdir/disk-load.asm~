;; Disk load Read DH sectors into ES:BX memory loacation from drive DL

disk_load:
    push dx         ; store DX on the stack so we can check number of sectors actually read later

    mov ax, 0x0201  ; int 13/ah=02h, BIOS read disk sectors into memory :: number of sectors to be read
    mov cx, 0x0002  ; cylinder 0 :: start reading at CL sector (sector 2 right after the boot sector)
    xor dx, dx      ; head 0

    int 0x13        ; BIOS interrupts for disk functions

    jc disk_error   ; jump if disk read error (carry flag sec/ = 1)

    pop dx          ; restore DX from stack
    cmp dh, al      ; if AL(# sector actually read) != DH (# sectors to read)
    jne disk_error

    ret
disk_error:
    mov bx, DISK_ERROR_MSG
    call print_string
    cli
    hlt

DISK_ERROR_MSG: db 'Disk read error!!', 0
